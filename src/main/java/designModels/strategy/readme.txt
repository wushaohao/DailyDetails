策略模式
策略模式将可变部分从程序中抽象分离成算法接口，在该接口下分别封装一系列算法并使它们可以相互替换，从而导致客户端程序独立预算法的改变


Favor composition over inheritance 复合优先于继承，多用组合，少用继承
在类中增加一个私有域，引用另一个已有的类的实例，通过调用引用实例的方法从而获得新的功能，这种设计被称为组合(复合)


策略模式优点:
    1.使用了组合,使架构更加灵活
    2.富有弹性，可以较好的应对变化(开闭原则)
    3.更好的代码复用性(相对于继承)
    4.消除大量的条件语句

缺点:
    1.客户代码需要了解每个策略实现细节
    2.增加了对象的数目(会导致类对象急剧增多 可能撑爆内存)

使用场景:
    1.许多相关的类仅仅是行为差异
    2.运行时选取不同的算法体
    3.通过条件语句在多个分支中选取一

